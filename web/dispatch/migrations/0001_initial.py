# Generated by Django 5.1.2 on 2025-06-27 07:26

import django.utils.timezone
import uuid
from decimal import Decimal
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Dispatch',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('dispatch_id', models.CharField(blank=True, max_length=50, null=True, unique=True)),
                ('order_number', models.CharField(blank=True, max_length=50, null=True)),
                ('order_date', models.DateTimeField(blank=True, null=True)),
                ('commission_amount', models.DecimalField(blank=True, decimal_places=2, help_text='Actual commission amount', max_digits=10, null=True)),
                ('commission_percentage', models.DecimalField(blank=True, decimal_places=2, default=Decimal('12.0'), help_text='Commission percentage', max_digits=5, null=True)),
                ('commission_currency', models.CharField(choices=[('CAD', 'Canadian Dollar'), ('USD', 'US Dollar')], default='CAD', help_text='Currency for commission amounts', max_length=3)),
                ('actual_start', models.DateTimeField(blank=True, help_text='Actual start time', null=True)),
                ('actual_end', models.DateTimeField(blank=True, help_text='Actual end time', null=True)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('assigned', 'Assigned'), ('in_transit', 'In Transit'), ('delivered', 'Delivered'), ('invoiced', 'Invoiced'), ('payment_received', 'Payment Received'), ('completed', 'Completed'), ('cancelled', 'Cancelled')], default='pending', help_text='Current status of the dispatch', max_length=20)),
                ('notes', models.TextField(blank=True, help_text='Additional notes about the dispatch', null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'Dispatch',
                'verbose_name_plural': 'Dispatches',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='DriverTruckAssignment',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('start_date', models.DateTimeField(default=django.utils.timezone.now, help_text='When this assignment begins')),
                ('end_date', models.DateTimeField(blank=True, help_text='When this assignment ends', null=True)),
                ('odometer_start', models.PositiveIntegerField(blank=True, help_text='Starting odometer reading when assignment begins', null=True)),
                ('odometer_end', models.PositiveIntegerField(blank=True, help_text='Ending odometer reading when assignment ends', null=True)),
                ('notes', models.TextField(blank=True, help_text='Additional notes about the assignment', null=True)),
                ('status', models.CharField(choices=[('unassigned', 'Unassigned'), ('assigned', 'Assigned'), ('on_duty', 'On Duty'), ('off_duty', 'Off Duty'), ('cancelled', 'Cancelled')], default='assigned', help_text='Current status of the assignment', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name': 'Driver-Truck Assignment',
                'verbose_name_plural': 'Driver-Truck Assignments',
                'ordering': ['-start_date'],
            },
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('type', models.CharField(choices=[('status_change', 'Status Change'), ('assignment_created', 'Assignment Created'), ('assignment_updated', 'Assignment Updated'), ('assignment_cancelled', 'Assignment Cancelled'), ('driver_assigned', 'Driver Assigned'), ('truck_assigned', 'Truck Assigned'), ('order_created', 'Order Created'), ('order_updated', 'Order Updated'), ('order_cancelled', 'Order Cancelled'), ('order_completed', 'Order Completed'), ('trip_started', 'Trip Started'), ('trip_delayed', 'Trip Delayed'), ('trip_completed', 'Trip Completed'), ('trip_location_updated', 'Trip Location Updated'), ('dispatch_created', 'Dispatch Created'), ('dispatch_assigned', 'Dispatch Assigned'), ('dispatch_in_transit', 'Dispatch In Transit'), ('dispatch_delivered', 'Dispatch Delivered'), ('dispatch_completed', 'Dispatch Completed'), ('dispatch_cancelled', 'Dispatch Cancelled'), ('driver_unavailable', 'Driver Unavailable'), ('truck_unavailable', 'Truck Unavailable'), ('driver_duty_exceeded', 'Driver Duty Hours Exceeded')], default='status_change', max_length=50)),
                ('priority', models.CharField(choices=[('low', 'Low'), ('medium', 'Medium'), ('high', 'High')], default='medium', max_length=20)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('sent', 'Sent'), ('read', 'Read'), ('error', 'Error')], default='pending', max_length=20)),
                ('title', models.CharField(max_length=255)),
                ('message', models.TextField()),
                ('metadata', models.JSONField(blank=True, default=dict)),
                ('sent_at', models.DateTimeField(blank=True, null=True)),
                ('read_at', models.DateTimeField(blank=True, null=True)),
                ('object_id', models.UUIDField()),
                ('recipient_emails', models.JSONField(blank=True, default=list)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('order_number', models.CharField(blank=True, max_length=255, null=True, unique=True)),
                ('pdf', models.TextField(blank=True, help_text='PDF representation of the order', null=True)),
                ('customer_name', models.CharField(blank=True, max_length=255, null=True)),
                ('customer_address', models.CharField(blank=True, max_length=255, null=True)),
                ('customer_email', models.EmailField(blank=True, max_length=254, null=True)),
                ('customer_phone', models.CharField(blank=True, max_length=255, null=True)),
                ('origin', models.CharField(blank=True, help_text='Pickup address', max_length=255, null=True)),
                ('destination', models.CharField(blank=True, help_text='Delivery address', max_length=255, null=True)),
                ('cargo_type', models.CharField(blank=True, max_length=100, null=True)),
                ('weight', models.FloatField(blank=True, help_text='Weight in pounds/kilograms', null=True)),
                ('pickup_date', models.DateTimeField(blank=True, null=True)),
                ('delivery_date', models.DateTimeField(blank=True, null=True)),
                ('remarks_or_special_instructions', models.TextField(blank=True, null=True)),
                ('load_total', models.FloatField(blank=True, help_text='Total cost of the load', null=True)),
                ('load_currency', models.CharField(blank=True, max_length=255, null=True)),
                ('raw_extract', models.JSONField(help_text='Extracted structured data from document processing')),
                ('raw_text', models.TextField(help_text='Original text extracted from documents')),
                ('completion_tokens', models.IntegerField(help_text='Number of tokens in the completion')),
                ('prompt_tokens', models.IntegerField(help_text='Number of tokens in the prompt')),
                ('total_tokens', models.IntegerField(help_text='Total tokens used in processing')),
                ('llm_model_name', models.CharField(help_text='Name of the LLM model used', max_length=255)),
                ('usage_details', models.JSONField(help_text='Detailed usage information from AI processing')),
                ('processed', models.BooleanField(default=False, help_text='Whether the order has been processed by AI')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('status', models.CharField(choices=[('PENDING', 'Pending'), ('IN_PROGRESS', 'In Progress'), ('COMPLETED', 'Completed'), ('CANCELLED', 'Cancelled')], default='PENDING', max_length=20)),
            ],
            options={
                'verbose_name': 'Order',
                'verbose_name_plural': 'Orders',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='OrderLog',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('action', models.CharField(choices=[('status_change', 'Status Change'), ('created', 'Created'), ('updated', 'Updated'), ('deleted', 'Deleted'), ('comment', 'Comment')], max_length=50)),
                ('message', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Order Log',
                'verbose_name_plural': 'Order Logs',
                'db_table': 'dispatch_order_log',
                'ordering': ['-created_at'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='StatusHistory',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('object_id', models.UUIDField()),
                ('old_status', models.CharField(blank=True, max_length=50, null=True)),
                ('new_status', models.CharField(max_length=50)),
                ('changed_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('notes', models.TextField(blank=True, null=True)),
                ('metadata', models.JSONField(blank=True, default=dict)),
            ],
            options={
                'verbose_name': 'Status History',
                'verbose_name_plural': 'Status Histories',
                'ordering': ['-changed_at'],
            },
        ),
        migrations.CreateModel(
            name='TenantSequence',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('sequence_type', models.CharField(choices=[('TRIP', 'Trip'), ('ORDER', 'Order'), ('DISPATCH', 'Dispatch')], default='TRIP', help_text='Type of sequence (e.g., TRIP, ORDER, etc.)', max_length=50)),
                ('current_value', models.IntegerField(default=0, help_text='Current sequence value')),
                ('last_reset', models.DateField(default=django.utils.timezone.now, help_text='Date when the sequence was last reset')),
            ],
        ),
        migrations.CreateModel(
            name='Trip',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('trip_id', models.CharField(blank=True, help_text='Unique trip identifier', max_length=50, null=True, unique=True)),
                ('estimated_distance', models.FloatField(blank=True, help_text='Estimated trip distance in miles/km', null=True)),
                ('estimated_duration', models.DurationField(blank=True, help_text='Estimated trip duration', null=True)),
                ('actual_distance', models.FloatField(blank=True, help_text='Actual distance traveled', null=True)),
                ('actual_duration', models.DurationField(blank=True, help_text='Actual trip duration', null=True)),
                ('route', models.JSONField(blank=True, help_text='JSON data containing the route information', null=True)),
                ('stops', models.JSONField(blank=True, help_text='JSON data containing stops along the route', null=True)),
                ('fuel_estimated', models.FloatField(blank=True, help_text='Estimated fuel cost', null=True)),
                ('fuel_actual', models.FloatField(blank=True, help_text='Actual fuel cost', null=True)),
                ('toll_estimated', models.FloatField(blank=True, help_text='Estimated toll cost', null=True)),
                ('toll_actual', models.FloatField(blank=True, help_text='Actual toll cost', null=True)),
                ('freight_estimated', models.FloatField(blank=True, help_text='Estimated freight value', null=True)),
                ('freight_actual', models.FloatField(blank=True, help_text='Actual freight value', null=True)),
                ('currency', models.CharField(choices=[('CAD', 'Canadian Dollar'), ('USD', 'US Dollar')], default='CAD', help_text='Currency for all monetary values', max_length=3)),
                ('start_time', models.DateTimeField(blank=True, help_text='Actual trip start time', null=True)),
                ('end_time', models.DateTimeField(blank=True, help_text='Actual trip end time', null=True)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('in_progress', 'In Progress'), ('completed', 'Completed'), ('cancelled', 'Cancelled')], default='pending', max_length=20)),
                ('notes', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('freight_value', models.DecimalField(blank=True, decimal_places=2, help_text='Value of the freight being transported', max_digits=10, null=True)),
            ],
            options={
                'verbose_name': 'Trip',
                'verbose_name_plural': 'Trips',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='TripLog',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('action', models.CharField(choices=[('status_change', 'Status Change'), ('created', 'Created'), ('updated', 'Updated'), ('deleted', 'Deleted'), ('comment', 'Comment')], max_length=50)),
                ('message', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Trip Log',
                'verbose_name_plural': 'Trip Logs',
                'db_table': 'dispatch_trip_log',
                'ordering': ['-created_at'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='UploadFile',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('file', models.TextField(blank=True, null=True)),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ['-uploaded_at'],
            },
        ),
    ]
