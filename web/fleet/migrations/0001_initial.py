# Generated by Django 5.1.2 on 2025-06-27 07:26

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('dispatch', '0001_initial'),
        ('tenant', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Carrier',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('name', models.CharField(help_text='The name of the carrier', max_length=100, verbose_name='Carrier Name')),
                ('legal_name', models.CharField(blank=True, help_text='The legal name of the carrier', max_length=100, null=True, verbose_name='Legal Name')),
                ('business_number', models.CharField(blank=True, help_text='The business number of the carrier', max_length=50, null=True, verbose_name='Business Number')),
                ('mc_number', models.CharField(blank=True, help_text='The MC number of the carrier', max_length=50, null=True, unique=True, verbose_name='MC Number')),
                ('dot_number', models.CharField(blank=True, max_length=50, null=True, unique=True)),
                ('email', models.EmailField(max_length=254, verbose_name='Email Address')),
                ('phone', models.CharField(max_length=20, verbose_name='Phone Number')),
                ('website', models.URLField(blank=True, null=True, verbose_name='Website URL')),
                ('address', models.TextField(verbose_name='Address')),
                ('city', models.CharField(blank=True, max_length=50, null=True, verbose_name='City')),
                ('state', models.CharField(blank=True, max_length=50, null=True, verbose_name='State')),
                ('zip_code', models.CharField(blank=True, max_length=10, null=True, validators=[django.core.validators.RegexValidator(message="Zip code must be in the format: '12345'", regex='^\\d{5}$')], verbose_name='Zip Code')),
                ('country', models.CharField(blank=True, max_length=50, null=True, verbose_name='Country')),
                ('total_trucks', models.IntegerField(default=0, help_text='The total number of trucks the carrier has', verbose_name='Total Trucks')),
                ('total_drivers', models.IntegerField(default=0, help_text='The total number of drivers the carrier has', verbose_name='Total Drivers')),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('active', 'Active'), ('inactive', 'Inactive'), ('suspended', 'Suspended'), ('blacklisted', 'Blacklisted')], default='active', max_length=20)),
                ('is_active', models.BooleanField(default=True, help_text='Whether the carrier is active', verbose_name='Is Active')),
                ('notes', models.TextField(blank=True, help_text='Notes about the carrier', verbose_name='Notes')),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tenant.tenant')),
            ],
            options={
                'verbose_name': 'Carrier',
                'verbose_name_plural': 'Carriers',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('name', models.CharField(max_length=255)),
                ('address', models.CharField(max_length=255)),
                ('email', models.EmailField(max_length=254)),
                ('phone', models.CharField(max_length=255)),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tenant.tenant')),
            ],
            options={
                'verbose_name': 'Customer',
                'verbose_name_plural': 'Customers',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Driver',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('first_name', models.CharField(max_length=50)),
                ('last_name', models.CharField(max_length=50)),
                ('date_of_birth', models.DateField(blank=True, null=True)),
                ('license_number', models.CharField(max_length=50, unique=True)),
                ('phone', models.CharField(blank=True, max_length=20, null=True)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('emergency_contact', models.JSONField(blank=True, null=True)),
                ('address', models.TextField(blank=True, null=True)),
                ('city', models.CharField(blank=True, max_length=50, null=True)),
                ('state', models.CharField(blank=True, max_length=50, null=True)),
                ('zip_code', models.CharField(blank=True, max_length=10, null=True)),
                ('country', models.CharField(blank=True, max_length=50, null=True)),
                ('employee_id', models.CharField(max_length=50, unique=True)),
                ('hire_date', models.DateField()),
                ('joining_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('termination_date', models.DateField(blank=True, null=True)),
                ('still_working', models.BooleanField(default=True)),
                ('is_active', models.BooleanField(default=True)),
                ('carrier', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='fleet.carrier')),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tenant.tenant')),
            ],
            options={
                'verbose_name': 'Driver',
                'verbose_name_plural': 'Drivers',
                'ordering': ['first_name', 'last_name'],
            },
        ),
        migrations.CreateModel(
            name='DriverEmployment',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('employment_status', models.CharField(choices=[('active', 'Active'), ('inactive', 'Inactive'), ('on_leave', 'On Leave'), ('terminated', 'Terminated')], default='active', max_length=20)),
                ('duty_status', models.CharField(choices=[('available', 'Available'), ('on_duty', 'On Duty'), ('on_leave', 'On Leave'), ('unassigned', 'Unassigned')], default='available', max_length=20)),
                ('current_location', models.CharField(blank=True, max_length=255, null=True)),
                ('last_location_update', models.DateTimeField(blank=True, null=True)),
                ('location_history', models.JSONField(blank=True, null=True)),
                ('max_hours_per_week', models.IntegerField(default=40)),
                ('preferred_routes', models.JSONField(blank=True, null=True)),
                ('current_assignment', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='current_driver_assignment', to='dispatch.drivertruckassignment')),
                ('driver', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='fleet.driver')),
                ('tenant', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='tenant.tenant')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='DriverLicense',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('name', models.CharField(max_length=255)),
                ('license_number', models.CharField(max_length=255)),
                ('date_of_birth', models.DateTimeField(blank=True, null=True)),
                ('expiry_date', models.DateTimeField(blank=True, null=True)),
                ('issued_date', models.DateTimeField(blank=True, null=True)),
                ('gender', models.CharField(blank=True, max_length=255, null=True)),
                ('address', models.CharField(blank=True, max_length=255, null=True)),
                ('country', models.CharField(blank=True, max_length=255, null=True)),
                ('province', models.CharField(blank=True, max_length=255, null=True)),
                ('state', models.CharField(blank=True, max_length=255, null=True)),
                ('license_type', models.CharField(blank=True, help_text='Type of license (e.g., 普通車)', max_length=255, null=True)),
                ('conditions', models.CharField(blank=True, help_text='License conditions or restrictions (e.g., AT車に限る)', max_length=255, null=True)),
                ('license_class', models.CharField(blank=True, help_text='License class or grade (e.g., 優良)', max_length=255, null=True)),
                ('public_safety_commission', models.CharField(blank=True, help_text='Issuing public safety commission (e.g., 公安委員会)', max_length=255, null=True)),
                ('completion_tokens', models.IntegerField(default=0)),
                ('prompt_tokens', models.IntegerField(default=0)),
                ('total_tokens', models.IntegerField(default=0)),
                ('llm_model_name', models.CharField(max_length=255)),
                ('uploaded_file_name', models.CharField(max_length=255)),
                ('file_save_path', models.CharField(max_length=255)),
                ('tenant', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='tenant.tenant')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='driver',
            name='drivers_license',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='fleet.driverlicense'),
        ),
        migrations.CreateModel(
            name='Truck',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('unit', models.IntegerField(help_text='The unique number of the truck', unique=True, verbose_name='Unit Number')),
                ('plate', models.CharField(help_text='The license plate of the truck', max_length=20, verbose_name='License Plate')),
                ('vin', models.CharField(blank=True, help_text='The Vehicle Identification Number of the truck', max_length=17, null=True, verbose_name='VIN Number')),
                ('make', models.CharField(max_length=50)),
                ('model', models.CharField(max_length=50)),
                ('value', models.FloatField(blank=True, help_text='The value of the truck', null=True, verbose_name='Value')),
                ('year', models.IntegerField(help_text='The year of the truck', verbose_name='Year')),
                ('country', models.CharField(blank=True, help_text='The country of the truck', max_length=50, null=True, verbose_name='Country')),
                ('state', models.CharField(blank=True, help_text='The state of the truck', max_length=50, null=True, verbose_name='State')),
                ('registration', models.CharField(blank=True, help_text='The registration of the truck', max_length=50, null=True, verbose_name='Registration')),
                ('ownership_type', models.CharField(choices=[('owned', 'Owned'), ('rented', 'Rented'), ('leased', 'Leased')], default='owned', help_text='The ownership type of the truck', max_length=50, verbose_name='Ownership Type')),
                ('tracking', models.CharField(blank=True, help_text='The tracking of the truck', max_length=50, null=True, verbose_name='Tracking')),
                ('leave_date', models.DateTimeField(blank=True, help_text='The date the truck left the fleet', null=True, verbose_name='Leave Date')),
                ('still_working', models.BooleanField(default=True, help_text='Whether the truck is still working', verbose_name='Still Working')),
                ('is_trailer', models.BooleanField(default=False, help_text='Whether the truck is a trailer', verbose_name='Is Trailer')),
                ('trailer_number', models.CharField(blank=True, help_text='The trailer number of the truck', max_length=50, null=True, verbose_name='Trailer Number')),
                ('trailer_capacity', models.CharField(blank=True, help_text='The capacity of the trailer', max_length=50, null=True, verbose_name='Trailer Capacity')),
                ('company_pays_fuel_cost', models.BooleanField(default=True, help_text='Whether the company pays the fuel cost', verbose_name='Company Pays Fuel Cost')),
                ('all_fuel_toll_cards', models.BooleanField(default=True, help_text='Whether the truck has all fuel toll cards', verbose_name='All Fuel Toll Cards')),
                ('ifta_group', models.CharField(blank=True, help_text='The IFTA group of the truck', max_length=50, null=True, verbose_name='IFTA Group')),
                ('terminal', models.CharField(blank=True, help_text='The terminal of the truck', max_length=50, null=True, verbose_name='Terminal')),
                ('tour', models.CharField(blank=True, help_text='The tour of the truck', max_length=50, null=True, verbose_name='Tour')),
                ('weight', models.FloatField(blank=True, help_text='The weight of the truck', null=True, verbose_name='Weight')),
                ('capacity', models.CharField(blank=True, help_text='The capacity of the truck', max_length=50, null=True, verbose_name='Capacity')),
                ('status', models.CharField(choices=[('active', 'Active'), ('inactive', 'Inactive'), ('maintenance', 'Maintenance'), ('retired', 'Retired')], default='active', help_text='The status of the truck', max_length=20, verbose_name='Status')),
                ('duty_status', models.CharField(choices=[('available', 'Available'), ('on_duty', 'On Duty'), ('off_duty', 'Off Duty'), ('in_maintenance', 'In Maintenance'), ('out_of_service', 'Out of Service')], default='available', help_text='The current duty status of the truck', max_length=20, verbose_name='Duty Status')),
                ('is_active', models.BooleanField(default=True, help_text='Whether the truck is active', verbose_name='Is Active')),
                ('notes', models.TextField(blank=True)),
                ('carrier', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='trucks', to='fleet.carrier')),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='trucks', to='tenant.tenant')),
            ],
            options={
                'verbose_name': 'Truck',
                'verbose_name_plural': 'Trucks',
                'ordering': ['unit'],
            },
        ),
        migrations.AddIndex(
            model_name='carrier',
            index=models.Index(fields=['name'], name='fleet_carri_name_c1941f_idx'),
        ),
        migrations.AddIndex(
            model_name='carrier',
            index=models.Index(fields=['business_number'], name='fleet_carri_busines_8db654_idx'),
        ),
        migrations.AddIndex(
            model_name='carrier',
            index=models.Index(fields=['status'], name='fleet_carri_status_49d6b6_idx'),
        ),
        migrations.AddIndex(
            model_name='customer',
            index=models.Index(fields=['name'], name='fleet_custo_name_2a46dd_idx'),
        ),
    ]
